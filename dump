diff --git a/engine.cpp b/engine.cpp
index 9566d09..d542263 100644
--- a/engine.cpp
+++ b/engine.cpp
@@ -33,7 +33,11 @@ static char gOperatingSystem[1024];
 static struct queryOperatingSystem {
     queryOperatingSystem() {
         // Operating system is unknown until further checking
+#if defined(_MSC_VER)
+        strcpy_s(gOperatingSystem, "Unknown");
+#else
         strcpy(gOperatingSystem, "Unknown");
+#endif
 #if !defined(_WIN32) && !defined(_WIN64)
         struct utsname n;
         if (uname(&n) == 0)
@@ -90,7 +94,7 @@ failedArchitecture:
             inWine = true;
             RegCloseKey(key);
         }
-#if defined(_WIN32)
+#if defined(_WIN32) && !defined(_WIN64)
         if (!strcmp(architecture, "AMD64")) {
             snprintf(gOperatingSystem, sizeof gOperatingSystem,
                 "%s %s %s (32-bit binary on 64-bit CPU)", name, version,
@@ -429,6 +433,16 @@ bool engine::initContext() {
     if (vid_fullscreen)
         flags |= SDL_WINDOW_FULLSCREEN;
 
+    // When running under Visual Studio's debugger force 1024x768 windowed
+#if defined(_MSC_VER)
+    if (IsDebuggerPresent())
+    {
+        flags &= ~SDL_WINDOW_FULLSCREEN;
+        m_screenWidth = 1024;
+        m_screenHeight = 768;
+    }
+#endif
+
     char name[1024];
     snprintf(name, sizeof name, "Neothyne [%s]", gOperatingSystem);
     ctx->m_window = SDL_CreateWindow(
@@ -745,6 +759,11 @@ size_t engine::height() const {
 }
 
 void engine::relativeMouse(bool state) {
+    // don't capture mouse while debugging
+#if defined(_MSC_VER)
+    if (IsDebuggerPresent())
+        return;
+#endif
     SDL_SetRelativeMouseMode(state ? SDL_TRUE : SDL_FALSE);
 }
 
@@ -796,7 +815,12 @@ void engine::setVSyncOption(int option) {
 void engine::screenShot() {
     // Generate a unique filename from the time
     const time_t t = time(nullptr);
+#if defined(_MSC_VER)
+    struct tm tm;
+    localtime_s(&tm, &t);
+#else
     const struct tm tm = *localtime(&t);
+#endif
     const u::string file = u::format("%sscreenshots/%d-%d-%d-%d%d%d",
         neoUserPath(), tm.tm_year + 1900, tm.tm_mon + 1, tm.tm_mday,
         tm.tm_hour, tm.tm_min, tm.tm_sec);
@@ -957,7 +981,6 @@ uint32_t frameTimer::ticks() const {
 [[noreturn]] void neoFatalError(const char *error) {
     writeConfig(gEngine.userPath());
     SDL_ShowSimpleMessageBox(SDL_MESSAGEBOX_ERROR, "Neothyne: Fatal error", error, nullptr);
-    fflush(nullptr);
     abort();
 }
 
@@ -984,7 +1007,7 @@ static int entryPoint(int argc, char **argv) {
     setenv("DRI_PRIME", "1", 1);
 #endif
 
-    if (SDL_Init(SDL_INIT_VIDEO | SDL_INIT_JOYSTICK | SDL_INIT_GAMECONTROLLER) != 0)
+    if (SDL_Init(SDL_INIT_VIDEO | SDL_INIT_JOYSTICK | SDL_INIT_GAMECONTROLLER | SDL_INIT_NOPARACHUTE) != 0)
         neoFatal("Failed to initialize SDL2");
 
     if (!gEngine.init(argc, argv))
@@ -1046,8 +1069,9 @@ int WINAPI WinMain(HINSTANCE hInst, HINSTANCE hPrev, LPSTR szCmdLine, int sw) {
     (void)sw;
 
 #if defined(_MSC_VER)
-    freopen(u::fixPath(gEngine.userPath() + "/stdout.txt").c_str(), "w", stdout);
-    freopen(u::fixPath(gEngine.userPath() + "/stderr.txt").c_str(), "w", stderr);
+    FILE *stream = nullptr;
+    freopen_s(&stream, u::fixPath(gEngine.userPath() + "/stdout.txt").c_str(), "w", stdout);
+    freopen_s(&stream, u::fixPath(gEngine.userPath() + "/stderr.txt").c_str(), "w", stderr);
 #endif
 
     auto parseCommandLine = [](const char *src, u::vector<char *> &args) {
@@ -1073,12 +1097,11 @@ int WINAPI WinMain(HINSTANCE hInst, HINSTANCE hPrev, LPSTR szCmdLine, int sw) {
         return buf;
     };
     u::vector<char *> args;
-    const char *const buf = parseCommandLine(GetCommandLine(), args);
+    const char *buf = parseCommandLine(GetCommandLine(), args);
     SDL_SetMainReady();
     const int status = entryPoint(args.size() - 1, &args[0]);
     delete[] buf;
-    exit(status);
-    return 0;
+    return status;
 }
 #else
 int main(int argc, char **argv) {
diff --git a/neothyne.vcxproj b/neothyne.vcxproj
index 440ade6..e0f062e 100644
--- a/neothyne.vcxproj
+++ b/neothyne.vcxproj
@@ -1,403 +1,417 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <ItemGroup Label="ProjectConfigurations">
-    <ProjectConfiguration Include="Debug|Win32">
-      <Configuration>Debug</Configuration>
-      <Platform>Win32</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="Release|Win32">
-      <Configuration>Release</Configuration>
-      <Platform>Win32</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="Debug|x64">
-      <Configuration>Debug</Configuration>
-      <Platform>x64</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="Release|x64">
-      <Configuration>Release</Configuration>
-      <Platform>x64</Platform>
-    </ProjectConfiguration>
-  </ItemGroup>
-  <PropertyGroup Label="Globals">
-    <ProjectGuid>{3E1198B2-E289-48EF-B94A-71DA62FC955C}</ProjectGuid>
-    <RootNamespace>neothyne</RootNamespace>
-    <WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>
-    <ProjectName>Neothyne</ProjectName>
-  </PropertyGroup>
-  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <UseDebugLibraries>true</UseDebugLibraries>
-    <PlatformToolset>v140</PlatformToolset>
-    <CharacterSet>NotSet</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <UseDebugLibraries>false</UseDebugLibraries>
-    <PlatformToolset>v140</PlatformToolset>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <CharacterSet>NotSet</CharacterSet>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <UseDebugLibraries>true</UseDebugLibraries>
-    <PlatformToolset>v140</PlatformToolset>
-    <CharacterSet>NotSet</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <UseDebugLibraries>false</UseDebugLibraries>
-    <PlatformToolset>v140</PlatformToolset>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <CharacterSet>NotSet</CharacterSet>
-  </PropertyGroup>
-  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
-  <ImportGroup Label="ExtensionSettings">
-  </ImportGroup>
-  <ImportGroup Label="Shared">
-  </ImportGroup>
-  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-  </ImportGroup>
-  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-  </ImportGroup>
-  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-  </ImportGroup>
-  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-  </ImportGroup>
-  <PropertyGroup Label="UserMacros" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
-    <GenerateManifest>false</GenerateManifest>
-    <OutDir>$(SolutionDir).build\$(Platform)\$(Configuration)\</OutDir>
-    <IntDir>$(SolutionDir).build\$(Platform)\$(Configuration)\</IntDir>
-    <LinkIncremental>false</LinkIncremental>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
-    <GenerateManifest>false</GenerateManifest>
-    <OutDir>$(SolutionDir).build\$(Platform)\$(Configuration)\</OutDir>
-    <IntDir>$(SolutionDir).build\$(Platform)\$(Configuration)\</IntDir>
-    <LinkIncremental>false</LinkIncremental>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
-    <GenerateManifest>false</GenerateManifest>
-    <OutDir>$(SolutionDir).build\$(Platform)\$(Configuration)\</OutDir>
-    <IntDir>$(SolutionDir).build\$(Platform)\$(Configuration)\</IntDir>
-    <LinkIncremental>false</LinkIncremental>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
-    <GenerateManifest>false</GenerateManifest>
-    <OutDir>$(SolutionDir).build\$(Platform)\$(Configuration)\</OutDir>
-    <IntDir>$(SolutionDir).build\$(Platform)\$(Configuration)\</IntDir>
-    <LinkIncremental>false</LinkIncremental>
-  </PropertyGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
-    <ClCompile>
-      <WarningLevel>Level2</WarningLevel>
-      <Optimization>Disabled</Optimization>
-      <OmitFramePointers>false</OmitFramePointers>
-      <PreprocessorDefinitions>DXT_COMPRESSOR;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <StringPooling>false</StringPooling>
-      <ExceptionHandling>false</ExceptionHandling>
-      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
-      <BufferSecurityCheck>true</BufferSecurityCheck>
-      <ControlFlowGuard>false</ControlFlowGuard>
-      <FunctionLevelLinking>true</FunctionLevelLinking>
-      <EnableParallelCodeGeneration>true</EnableParallelCodeGeneration>
-      <EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
-      <FloatingPointModel>Fast</FloatingPointModel>
-      <FloatingPointExceptions>false</FloatingPointExceptions>
-      <CreateHotpatchableImage>false</CreateHotpatchableImage>
-      <RuntimeTypeInfo>false</RuntimeTypeInfo>
-      <CompileAs>CompileAsCpp</CompileAs>
-      <WholeProgramOptimization>false</WholeProgramOptimization>
-      <AdditionalIncludeDirectories>./;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <ObjectFileName>$(IntDir)%(RelativeDir)\%(Filename)</ObjectFileName>
-    </ClCompile>
-    <Link>
-      <AllowIsolation>false</AllowIsolation>
-    </Link>
-    <Link>
-      <EnableUAC>false</EnableUAC>
-      <SubSystem>Windows</SubSystem>
-      <GenerateWindowsMetadata>false</GenerateWindowsMetadata>
-      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
-    </Link>
-    <PostBuildEvent>
+﻿<?xml version="1.0" encoding="utf-8"?>
+<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <ItemGroup Label="ProjectConfigurations">
+    <ProjectConfiguration Include="Debug|Win32">
+      <Configuration>Debug</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Release|Win32">
+      <Configuration>Release</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Debug|x64">
+      <Configuration>Debug</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Release|x64">
+      <Configuration>Release</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+  </ItemGroup>
+  <PropertyGroup Label="Globals">
+    <ProjectGuid>{3E1198B2-E289-48EF-B94A-71DA62FC955C}</ProjectGuid>
+    <RootNamespace>neothyne</RootNamespace>
+    <WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>
+    <ProjectName>Neothyne</ProjectName>
+  </PropertyGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <UseDebugLibraries>true</UseDebugLibraries>
+    <PlatformToolset>v140</PlatformToolset>
+    <CharacterSet>NotSet</CharacterSet>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <PlatformToolset>v140</PlatformToolset>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <CharacterSet>NotSet</CharacterSet>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <UseDebugLibraries>true</UseDebugLibraries>
+    <PlatformToolset>v140</PlatformToolset>
+    <CharacterSet>NotSet</CharacterSet>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <PlatformToolset>v140</PlatformToolset>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <CharacterSet>NotSet</CharacterSet>
+  </PropertyGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
+  <ImportGroup Label="ExtensionSettings">
+  </ImportGroup>
+  <ImportGroup Label="Shared">
+  </ImportGroup>
+  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <PropertyGroup Label="UserMacros" />
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
+    <GenerateManifest>false</GenerateManifest>
+    <OutDir>$(SolutionDir).build\$(Platform)\$(Configuration)\</OutDir>
+    <IntDir>$(SolutionDir).build\$(Platform)\$(Configuration)\</IntDir>
+    <LinkIncremental>false</LinkIncremental>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
+    <GenerateManifest>false</GenerateManifest>
+    <OutDir>$(SolutionDir).build\$(Platform)\$(Configuration)\</OutDir>
+    <IntDir>$(SolutionDir).build\$(Platform)\$(Configuration)\</IntDir>
+    <LinkIncremental>false</LinkIncremental>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
+    <GenerateManifest>false</GenerateManifest>
+    <OutDir>$(SolutionDir).build\$(Platform)\$(Configuration)\</OutDir>
+    <IntDir>$(SolutionDir).build\$(Platform)\$(Configuration)\</IntDir>
+    <LinkIncremental>false</LinkIncremental>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
+    <GenerateManifest>false</GenerateManifest>
+    <OutDir>$(SolutionDir).build\$(Platform)\$(Configuration)\</OutDir>
+    <IntDir>$(SolutionDir).build\$(Platform)\$(Configuration)\</IntDir>
+    <LinkIncremental>false</LinkIncremental>
+  </PropertyGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
+    <ClCompile>
+      <WarningLevel>Level2</WarningLevel>
+      <Optimization>Disabled</Optimization>
+      <OmitFramePointers>false</OmitFramePointers>
+      <PreprocessorDefinitions>DXT_COMPRESSOR;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <StringPooling>true</StringPooling>
+      <ExceptionHandling>false</ExceptionHandling>
+      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
+      <BufferSecurityCheck>true</BufferSecurityCheck>
+      <ControlFlowGuard>false</ControlFlowGuard>
+      <FunctionLevelLinking>true</FunctionLevelLinking>
+      <EnableParallelCodeGeneration>true</EnableParallelCodeGeneration>
+      <EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
+      <FloatingPointModel>Fast</FloatingPointModel>
+      <FloatingPointExceptions>false</FloatingPointExceptions>
+      <CreateHotpatchableImage>false</CreateHotpatchableImage>
+      <RuntimeTypeInfo>false</RuntimeTypeInfo>
+      <CompileAs>CompileAsCpp</CompileAs>
+      <WholeProgramOptimization>false</WholeProgramOptimization>
+      <AdditionalIncludeDirectories>./;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <ObjectFileName>$(IntDir)%(RelativeDir)\%(Filename)</ObjectFileName>
+      <SDLCheck>true</SDLCheck>
+      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
+      <StructMemberAlignment>16Bytes</StructMemberAlignment>
+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
+    </ClCompile>
+    <Link>
+      <AllowIsolation>false</AllowIsolation>
+    </Link>
+    <Link>
+      <EnableUAC>false</EnableUAC>
+      <SubSystem>Windows</SubSystem>
+      <GenerateWindowsMetadata>false</GenerateWindowsMetadata>
+      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
+      <GenerateDebugInformation>Debug</GenerateDebugInformation>
+    </Link>
+    <PostBuildEvent>
       <Command>copy "$(TargetPath)" "$(ProjectDir)$(TargetFileName)"
 copy "$(ProjectDir)packages\sdl2.redist.2.0.3\build\native\bin\$(Platform)\dynamic\SDL2.dll" "$(ProjectDir)\SDL2.dll"
-rmdir "$(ProjectDir).build\$(Platform)\$(Configuration)\$(ProjectName).tlog" /s /q</Command>
-    </PostBuildEvent>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
-    <ClCompile>
-      <WarningLevel>Level2</WarningLevel>
-      <Optimization>Disabled</Optimization>
-      <OmitFramePointers>false</OmitFramePointers>
-      <PreprocessorDefinitions>DXT_COMPRESSOR;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <StringPooling>false</StringPooling>
-      <ExceptionHandling>false</ExceptionHandling>
-      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
-      <BufferSecurityCheck>true</BufferSecurityCheck>
-      <ControlFlowGuard>false</ControlFlowGuard>
-      <FunctionLevelLinking>true</FunctionLevelLinking>
-      <EnableParallelCodeGeneration>true</EnableParallelCodeGeneration>
-      <EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
-      <FloatingPointModel>Fast</FloatingPointModel>
-      <FloatingPointExceptions>false</FloatingPointExceptions>
-      <CreateHotpatchableImage>false</CreateHotpatchableImage>
-      <RuntimeTypeInfo>false</RuntimeTypeInfo>
-      <CompileAs>CompileAsCpp</CompileAs>
-      <WholeProgramOptimization>false</WholeProgramOptimization>
-      <AdditionalIncludeDirectories>./;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <ObjectFileName>$(IntDir)%(RelativeDir)\%(Filename)</ObjectFileName>
-    </ClCompile>
-    <Link>
-      <AllowIsolation>false</AllowIsolation>
-    </Link>
-    <Link>
-      <EnableUAC>false</EnableUAC>
-      <SubSystem>Windows</SubSystem>
-      <GenerateWindowsMetadata>false</GenerateWindowsMetadata>
-      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
-    </Link>
-    <PostBuildEvent>
+rmdir "$(ProjectDir).build\$(Platform)\$(Configuration)\$(ProjectName).tlog" /s /q</Command>
+    </PostBuildEvent>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
+    <ClCompile>
+      <WarningLevel>Level2</WarningLevel>
+      <Optimization>Disabled</Optimization>
+      <OmitFramePointers>false</OmitFramePointers>
+      <PreprocessorDefinitions>DXT_COMPRESSOR;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <StringPooling>true</StringPooling>
+      <ExceptionHandling>false</ExceptionHandling>
+      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
+      <BufferSecurityCheck>true</BufferSecurityCheck>
+      <ControlFlowGuard>false</ControlFlowGuard>
+      <FunctionLevelLinking>true</FunctionLevelLinking>
+      <EnableParallelCodeGeneration>true</EnableParallelCodeGeneration>
+      <EnableEnhancedInstructionSet>NotSet</EnableEnhancedInstructionSet>
+      <FloatingPointModel>Fast</FloatingPointModel>
+      <FloatingPointExceptions>false</FloatingPointExceptions>
+      <CreateHotpatchableImage>false</CreateHotpatchableImage>
+      <RuntimeTypeInfo>false</RuntimeTypeInfo>
+      <CompileAs>CompileAsCpp</CompileAs>
+      <WholeProgramOptimization>false</WholeProgramOptimization>
+      <AdditionalIncludeDirectories>./;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <ObjectFileName>$(IntDir)%(RelativeDir)\%(Filename)</ObjectFileName>
+      <SDLCheck>true</SDLCheck>
+      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
+      <StructMemberAlignment>16Bytes</StructMemberAlignment>
+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
+    </ClCompile>
+    <Link>
+      <AllowIsolation>false</AllowIsolation>
+    </Link>
+    <Link>
+      <EnableUAC>false</EnableUAC>
+      <SubSystem>Windows</SubSystem>
+      <GenerateWindowsMetadata>false</GenerateWindowsMetadata>
+      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
+      <GenerateDebugInformation>Debug</GenerateDebugInformation>
+    </Link>
+    <PostBuildEvent>
       <Command>copy "$(TargetPath)" "$(ProjectDir)$(TargetFileName)"
 copy "$(ProjectDir)packages\sdl2.redist.2.0.3\build\native\bin\$(Platform)\dynamic\SDL2.dll" "$(ProjectDir)\SDL2.dll"
-rmdir "$(ProjectDir).build\$(Platform)\$(Configuration)\$(ProjectName).tlog" /s /q</Command>
-    </PostBuildEvent>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
-    <ClCompile>
-      <WarningLevel>Level2</WarningLevel>
-      <Optimization>Full</Optimization>
-      <FunctionLevelLinking>false</FunctionLevelLinking>
-      <IntrinsicFunctions>true</IntrinsicFunctions>
-      <OmitFramePointers>true</OmitFramePointers>
-      <PreprocessorDefinitions>DXT_COMPRESSOR;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <StringPooling>false</StringPooling>
-      <ExceptionHandling>false</ExceptionHandling>
-      <BufferSecurityCheck>false</BufferSecurityCheck>
-      <ControlFlowGuard>false</ControlFlowGuard>
-      <EnableParallelCodeGeneration>true</EnableParallelCodeGeneration>
-      <EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
-      <FloatingPointModel>Fast</FloatingPointModel>
-      <FloatingPointExceptions>false</FloatingPointExceptions>
-      <CreateHotpatchableImage>false</CreateHotpatchableImage>
-      <ForceConformanceInForLoopScope>true</ForceConformanceInForLoopScope>
-      <RuntimeTypeInfo>false</RuntimeTypeInfo>
-      <OpenMPSupport>false</OpenMPSupport>
-      <CompileAs>CompileAsCpp</CompileAs>
-      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
-      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
-      <AdditionalIncludeDirectories>./;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <ObjectFileName>$(IntDir)%(RelativeDir)\%(Filename)</ObjectFileName>
-      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
-    </ClCompile>
-    <Link>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <OptimizeReferences>true</OptimizeReferences>
-      <AllowIsolation>false</AllowIsolation>
-      <EnableUAC>false</EnableUAC>
-      <SubSystem>Windows</SubSystem>
-      <GenerateWindowsMetadata>false</GenerateWindowsMetadata>
-      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
-    </Link>
-    <PostBuildEvent>
+rmdir "$(ProjectDir).build\$(Platform)\$(Configuration)\$(ProjectName).tlog" /s /q</Command>
+    </PostBuildEvent>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
+    <ClCompile>
+      <WarningLevel>Level2</WarningLevel>
+      <Optimization>Full</Optimization>
+      <FunctionLevelLinking>false</FunctionLevelLinking>
+      <IntrinsicFunctions>true</IntrinsicFunctions>
+      <OmitFramePointers>true</OmitFramePointers>
+      <PreprocessorDefinitions>DXT_COMPRESSOR;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <StringPooling>true</StringPooling>
+      <ExceptionHandling>false</ExceptionHandling>
+      <BufferSecurityCheck>false</BufferSecurityCheck>
+      <ControlFlowGuard>false</ControlFlowGuard>
+      <EnableParallelCodeGeneration>true</EnableParallelCodeGeneration>
+      <EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
+      <FloatingPointModel>Fast</FloatingPointModel>
+      <FloatingPointExceptions>false</FloatingPointExceptions>
+      <CreateHotpatchableImage>false</CreateHotpatchableImage>
+      <ForceConformanceInForLoopScope>true</ForceConformanceInForLoopScope>
+      <RuntimeTypeInfo>false</RuntimeTypeInfo>
+      <OpenMPSupport>false</OpenMPSupport>
+      <CompileAs>CompileAsCpp</CompileAs>
+      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
+      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
+      <AdditionalIncludeDirectories>./;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <ObjectFileName>$(IntDir)%(RelativeDir)\%(Filename)</ObjectFileName>
+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
+      <StructMemberAlignment>16Bytes</StructMemberAlignment>
+      <MinimalRebuild>true</MinimalRebuild>
+    </ClCompile>
+    <Link>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+      <AllowIsolation>false</AllowIsolation>
+      <EnableUAC>false</EnableUAC>
+      <SubSystem>Windows</SubSystem>
+      <GenerateWindowsMetadata>false</GenerateWindowsMetadata>
+      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
+    </Link>
+    <PostBuildEvent>
       <Command>copy "$(TargetPath)" "$(ProjectDir)$(TargetFileName)"
 copy "$(ProjectDir)packages\sdl2.redist.2.0.3\build\native\bin\$(Platform)\dynamic\SDL2.dll" "$(ProjectDir)\SDL2.dll"
-rmdir "$(ProjectDir).build\$(Platform)\$(Configuration)\$(ProjectName).tlog" /s /q</Command>
-    </PostBuildEvent>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
-    <ClCompile>
-      <WarningLevel>Level2</WarningLevel>
-      <Optimization>Full</Optimization>
-      <FunctionLevelLinking>false</FunctionLevelLinking>
-      <IntrinsicFunctions>true</IntrinsicFunctions>
-      <OmitFramePointers>true</OmitFramePointers>
-      <PreprocessorDefinitions>DXT_COMPRESSOR;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <StringPooling>false</StringPooling>
-      <ExceptionHandling>false</ExceptionHandling>
-      <BufferSecurityCheck>false</BufferSecurityCheck>
-      <ControlFlowGuard>false</ControlFlowGuard>
-      <EnableParallelCodeGeneration>true</EnableParallelCodeGeneration>
-      <EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
-      <FloatingPointModel>Fast</FloatingPointModel>
-      <FloatingPointExceptions>false</FloatingPointExceptions>
-      <CreateHotpatchableImage>false</CreateHotpatchableImage>
-      <ForceConformanceInForLoopScope>true</ForceConformanceInForLoopScope>
-      <RuntimeTypeInfo>false</RuntimeTypeInfo>
-      <OpenMPSupport>false</OpenMPSupport>
-      <CompileAs>CompileAsCpp</CompileAs>
-      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
-      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
-      <AdditionalIncludeDirectories>./;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <ObjectFileName>$(IntDir)%(RelativeDir)\%(Filename)</ObjectFileName>
-      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
-    </ClCompile>
-    <Link>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <OptimizeReferences>true</OptimizeReferences>
-      <AllowIsolation>false</AllowIsolation>
-      <EnableUAC>false</EnableUAC>
-      <SubSystem>Windows</SubSystem>
-      <GenerateWindowsMetadata>false</GenerateWindowsMetadata>
-      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
-    </Link>
-    <PostBuildEvent>
+rmdir "$(ProjectDir).build\$(Platform)\$(Configuration)\$(ProjectName).tlog" /s /q</Command>
+    </PostBuildEvent>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
+    <ClCompile>
+      <WarningLevel>Level2</WarningLevel>
+      <Optimization>Full</Optimization>
+      <FunctionLevelLinking>false</FunctionLevelLinking>
+      <IntrinsicFunctions>true</IntrinsicFunctions>
+      <OmitFramePointers>true</OmitFramePointers>
+      <PreprocessorDefinitions>DXT_COMPRESSOR;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <StringPooling>true</StringPooling>
+      <ExceptionHandling>false</ExceptionHandling>
+      <BufferSecurityCheck>false</BufferSecurityCheck>
+      <ControlFlowGuard>false</ControlFlowGuard>
+      <EnableParallelCodeGeneration>true</EnableParallelCodeGeneration>
+      <EnableEnhancedInstructionSet>NotSet</EnableEnhancedInstructionSet>
+      <FloatingPointModel>Fast</FloatingPointModel>
+      <FloatingPointExceptions>false</FloatingPointExceptions>
+      <CreateHotpatchableImage>false</CreateHotpatchableImage>
+      <ForceConformanceInForLoopScope>true</ForceConformanceInForLoopScope>
+      <RuntimeTypeInfo>false</RuntimeTypeInfo>
+      <OpenMPSupport>false</OpenMPSupport>
+      <CompileAs>CompileAsCpp</CompileAs>
+      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
+      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
+      <AdditionalIncludeDirectories>./;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <ObjectFileName>$(IntDir)%(RelativeDir)\%(Filename)</ObjectFileName>
+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
+      <StructMemberAlignment>16Bytes</StructMemberAlignment>
+      <MinimalRebuild>true</MinimalRebuild>
+    </ClCompile>
+    <Link>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+      <AllowIsolation>false</AllowIsolation>
+      <EnableUAC>false</EnableUAC>
+      <SubSystem>Windows</SubSystem>
+      <GenerateWindowsMetadata>false</GenerateWindowsMetadata>
+      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
+    </Link>
+    <PostBuildEvent>
       <Command>copy "$(TargetPath)" "$(ProjectDir)$(TargetFileName)"
 copy "$(ProjectDir)packages\sdl2.redist.2.0.3\build\native\bin\$(Platform)\dynamic\SDL2.dll" "$(ProjectDir)\SDL2.dll"
-rmdir "$(ProjectDir).build\$(Platform)\$(Configuration)\$(ProjectName).tlog" /s /q</Command>
-    </PostBuildEvent>
-  </ItemDefinitionGroup>
-  <ItemGroup>
-    <ClInclude Include="a_fader.h" />
-    <ClInclude Include="a_filter.h" />
-    <ClInclude Include="a_lane.h" />
-    <ClInclude Include="a_system.h" />
-    <ClInclude Include="a_wav.h" />
-    <ClInclude Include="cvar.h" />
-    <ClInclude Include="c_complete.h" />
-    <ClInclude Include="engine.h" />
-    <ClInclude Include="game\client.h" />
-    <ClInclude Include="game\edit.h" />
-    <ClInclude Include="game\menu.h" />
-    <ClInclude Include="game\res.h" />
-    <ClInclude Include="game\world.h" />
-    <ClInclude Include="grader.h" />
-    <ClInclude Include="gui.h" />
-    <ClInclude Include="kdmap.h" />
-    <ClInclude Include="kdtree.h" />
-    <ClInclude Include="mesh.h" />
-    <ClInclude Include="model.h" />
-    <ClInclude Include="m_bbox.h" />
-    <ClInclude Include="m_const.h" />
-    <ClInclude Include="m_half.h" />
-    <ClInclude Include="m_mat.h" />
-    <ClInclude Include="m_plane.h" />
-    <ClInclude Include="m_quat.h" />
-    <ClInclude Include="m_trig.h" />
-    <ClInclude Include="m_vec.h" />
-    <ClInclude Include="r_aa.h" />
-    <ClInclude Include="r_billboard.h" />
-    <ClInclude Include="r_common.h" />
-    <ClInclude Include="r_composite.h" />
-    <ClInclude Include="r_gbuffer.h" />
-    <ClInclude Include="r_geom.h" />
-    <ClInclude Include="r_grader.h" />
-    <ClInclude Include="r_gui.h" />
-    <ClInclude Include="r_light.h" />
-    <ClInclude Include="r_method.h" />
-    <ClInclude Include="r_model.h" />
-    <ClInclude Include="r_particles.h" />
-    <ClInclude Include="r_pipeline.h" />
-    <ClInclude Include="r_shadow.h" />
-    <ClInclude Include="r_skybox.h" />
-    <ClInclude Include="r_ssao.h" />
-    <ClInclude Include="r_stats.h" />
-    <ClInclude Include="r_texture.h" />
-    <ClInclude Include="r_vignette.h" />
-    <ClInclude Include="r_world.h" />
-    <ClInclude Include="texture.h" />
-    <ClInclude Include="u_algorithm.h" />
-    <ClInclude Include="u_assert.h" />
-    <ClInclude Include="u_buffer.h" />
-    <ClInclude Include="u_file.h" />
-    <ClInclude Include="u_hash.h" />
-    <ClInclude Include="u_lru.h" />
-    <ClInclude Include="u_map.h" />
-    <ClInclude Include="u_memory.h" />
-    <ClInclude Include="u_misc.h" />
-    <ClInclude Include="u_new.h" />
-    <ClInclude Include="u_optional.h" />
-    <ClInclude Include="u_pair.h" />
-    <ClInclude Include="u_set.h" />
-    <ClInclude Include="u_sha512.h" />
-    <ClInclude Include="u_stack.h" />
-    <ClInclude Include="u_string.h" />
-    <ClInclude Include="u_traits.h" />
-    <ClInclude Include="u_vector.h" />
-    <ClInclude Include="u_zip.h" />
-    <ClInclude Include="u_zlib.h" />
-    <ClInclude Include="world.h" />
-  </ItemGroup>
-  <ItemGroup>
-    <ClCompile Include="a_fader.cpp" />
-    <ClCompile Include="a_filter.cpp" />
-    <ClCompile Include="a_lane.cpp" />
-    <ClCompile Include="a_system.cpp" />
-    <ClCompile Include="a_wav.cpp" />
-    <ClCompile Include="cvar.cpp" />
-    <ClCompile Include="c_complete.cpp" />
-    <ClCompile Include="engine.cpp" />
-    <ClCompile Include="game\client.cpp" />
-    <ClCompile Include="game\edit.cpp" />
-    <ClCompile Include="game\main.cpp" />
-    <ClCompile Include="game\menu.cpp" />
-    <ClCompile Include="game\world.cpp" />
-    <ClCompile Include="grader.cpp" />
-    <ClCompile Include="gui.cpp" />
-    <ClCompile Include="kdmap.cpp" />
-    <ClCompile Include="kdtree.cpp" />
-    <ClCompile Include="mesh.cpp" />
-    <ClCompile Include="model.cpp" />
-    <ClCompile Include="m_half.cpp" />
-    <ClCompile Include="m_mat.cpp" />
-    <ClCompile Include="m_plane.cpp" />
-    <ClCompile Include="m_quat.cpp" />
-    <ClCompile Include="m_trig.cpp" />
-    <ClCompile Include="m_vec.cpp" />
-    <ClCompile Include="r_aa.cpp" />
-    <ClCompile Include="r_billboard.cpp" />
-    <ClCompile Include="r_common.cpp" />
-    <ClCompile Include="r_composite.cpp" />
-    <ClCompile Include="r_gbuffer.cpp" />
-    <ClCompile Include="r_geom.cpp" />
-    <ClCompile Include="r_grader.cpp" />
-    <ClCompile Include="r_gui.cpp" />
-    <ClCompile Include="r_light.cpp" />
-    <ClCompile Include="r_method.cpp" />
-    <ClCompile Include="r_model.cpp" />
-    <ClCompile Include="r_particles.cpp" />
-    <ClCompile Include="r_pipeline.cpp" />
-    <ClCompile Include="r_shadow.cpp" />
-    <ClCompile Include="r_skybox.cpp" />
-    <ClCompile Include="r_ssao.cpp" />
-    <ClCompile Include="r_stats.cpp" />
-    <ClCompile Include="r_texture.cpp" />
-    <ClCompile Include="r_vignette.cpp" />
-    <ClCompile Include="r_world.cpp" />
-    <ClCompile Include="texture.cpp" />
-    <ClCompile Include="u_assert.cpp" />
-    <ClCompile Include="u_file.cpp" />
-    <ClCompile Include="u_hash.cpp" />
-    <ClCompile Include="u_misc.cpp" />
-    <ClCompile Include="u_new.cpp" />
-    <ClCompile Include="u_string.cpp" />
-    <ClCompile Include="u_zip.cpp" />
-    <ClCompile Include="u_zlib.cpp" />
-  </ItemGroup>
-  <ItemGroup>
-    <ResourceCompile Include="neothyne.rc" />
-  </ItemGroup>
-  <ItemGroup>
-    <None Include="packages.config" />
-  </ItemGroup>
-  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
-  <ImportGroup Label="ExtensionTargets">
-    <Import Project="packages\sdl2.redist.2.0.3\build\native\sdl2.redist.targets" Condition="Exists('packages\sdl2.redist.2.0.3\build\native\sdl2.redist.targets')" />
-    <Import Project="packages\sdl2.2.0.3\build\native\sdl2.targets" Condition="Exists('packages\sdl2.2.0.3\build\native\sdl2.targets')" />
-  </ImportGroup>
-  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
-    <PropertyGroup>
-      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
-    </PropertyGroup>
-    <Error Condition="!Exists('packages\sdl2.redist.2.0.3\build\native\sdl2.redist.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\sdl2.redist.2.0.3\build\native\sdl2.redist.targets'))" />
-    <Error Condition="!Exists('packages\sdl2.2.0.3\build\native\sdl2.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\sdl2.2.0.3\build\native\sdl2.targets'))" />
-  </Target>
-</Project>
+rmdir "$(ProjectDir).build\$(Platform)\$(Configuration)\$(ProjectName).tlog" /s /q</Command>
+    </PostBuildEvent>
+  </ItemDefinitionGroup>
+  <ItemGroup>
+    <ClInclude Include="a_fader.h" />
+    <ClInclude Include="a_filter.h" />
+    <ClInclude Include="a_lane.h" />
+    <ClInclude Include="a_system.h" />
+    <ClInclude Include="a_wav.h" />
+    <ClInclude Include="cvar.h" />
+    <ClInclude Include="c_complete.h" />
+    <ClInclude Include="engine.h" />
+    <ClInclude Include="game\client.h" />
+    <ClInclude Include="game\edit.h" />
+    <ClInclude Include="game\menu.h" />
+    <ClInclude Include="game\res.h" />
+    <ClInclude Include="game\world.h" />
+    <ClInclude Include="grader.h" />
+    <ClInclude Include="gui.h" />
+    <ClInclude Include="kdmap.h" />
+    <ClInclude Include="kdtree.h" />
+    <ClInclude Include="mesh.h" />
+    <ClInclude Include="model.h" />
+    <ClInclude Include="m_bbox.h" />
+    <ClInclude Include="m_const.h" />
+    <ClInclude Include="m_half.h" />
+    <ClInclude Include="m_mat.h" />
+    <ClInclude Include="m_plane.h" />
+    <ClInclude Include="m_quat.h" />
+    <ClInclude Include="m_trig.h" />
+    <ClInclude Include="m_vec.h" />
+    <ClInclude Include="r_aa.h" />
+    <ClInclude Include="r_billboard.h" />
+    <ClInclude Include="r_common.h" />
+    <ClInclude Include="r_composite.h" />
+    <ClInclude Include="r_gbuffer.h" />
+    <ClInclude Include="r_geom.h" />
+    <ClInclude Include="r_grader.h" />
+    <ClInclude Include="r_gui.h" />
+    <ClInclude Include="r_light.h" />
+    <ClInclude Include="r_method.h" />
+    <ClInclude Include="r_model.h" />
+    <ClInclude Include="r_particles.h" />
+    <ClInclude Include="r_pipeline.h" />
+    <ClInclude Include="r_shadow.h" />
+    <ClInclude Include="r_skybox.h" />
+    <ClInclude Include="r_ssao.h" />
+    <ClInclude Include="r_stats.h" />
+    <ClInclude Include="r_texture.h" />
+    <ClInclude Include="r_vignette.h" />
+    <ClInclude Include="r_world.h" />
+    <ClInclude Include="texture.h" />
+    <ClInclude Include="u_algorithm.h" />
+    <ClInclude Include="u_assert.h" />
+    <ClInclude Include="u_buffer.h" />
+    <ClInclude Include="u_file.h" />
+    <ClInclude Include="u_hash.h" />
+    <ClInclude Include="u_lru.h" />
+    <ClInclude Include="u_map.h" />
+    <ClInclude Include="u_memory.h" />
+    <ClInclude Include="u_misc.h" />
+    <ClInclude Include="u_new.h" />
+    <ClInclude Include="u_optional.h" />
+    <ClInclude Include="u_pair.h" />
+    <ClInclude Include="u_set.h" />
+    <ClInclude Include="u_sha512.h" />
+    <ClInclude Include="u_stack.h" />
+    <ClInclude Include="u_string.h" />
+    <ClInclude Include="u_traits.h" />
+    <ClInclude Include="u_vector.h" />
+    <ClInclude Include="u_zip.h" />
+    <ClInclude Include="u_zlib.h" />
+    <ClInclude Include="world.h" />
+  </ItemGroup>
+  <ItemGroup>
+    <ClCompile Include="a_fader.cpp" />
+    <ClCompile Include="a_filter.cpp" />
+    <ClCompile Include="a_lane.cpp" />
+    <ClCompile Include="a_system.cpp" />
+    <ClCompile Include="a_wav.cpp" />
+    <ClCompile Include="cvar.cpp" />
+    <ClCompile Include="c_complete.cpp" />
+    <ClCompile Include="engine.cpp" />
+    <ClCompile Include="game\client.cpp" />
+    <ClCompile Include="game\edit.cpp" />
+    <ClCompile Include="game\main.cpp" />
+    <ClCompile Include="game\menu.cpp" />
+    <ClCompile Include="game\world.cpp" />
+    <ClCompile Include="grader.cpp" />
+    <ClCompile Include="gui.cpp" />
+    <ClCompile Include="kdmap.cpp" />
+    <ClCompile Include="kdtree.cpp" />
+    <ClCompile Include="mesh.cpp" />
+    <ClCompile Include="model.cpp" />
+    <ClCompile Include="m_half.cpp" />
+    <ClCompile Include="m_mat.cpp" />
+    <ClCompile Include="m_plane.cpp" />
+    <ClCompile Include="m_quat.cpp" />
+    <ClCompile Include="m_trig.cpp" />
+    <ClCompile Include="m_vec.cpp" />
+    <ClCompile Include="r_aa.cpp" />
+    <ClCompile Include="r_billboard.cpp" />
+    <ClCompile Include="r_common.cpp" />
+    <ClCompile Include="r_composite.cpp" />
+    <ClCompile Include="r_gbuffer.cpp" />
+    <ClCompile Include="r_geom.cpp" />
+    <ClCompile Include="r_grader.cpp" />
+    <ClCompile Include="r_gui.cpp" />
+    <ClCompile Include="r_light.cpp" />
+    <ClCompile Include="r_method.cpp" />
+    <ClCompile Include="r_model.cpp" />
+    <ClCompile Include="r_particles.cpp" />
+    <ClCompile Include="r_pipeline.cpp" />
+    <ClCompile Include="r_shadow.cpp" />
+    <ClCompile Include="r_skybox.cpp" />
+    <ClCompile Include="r_ssao.cpp" />
+    <ClCompile Include="r_stats.cpp" />
+    <ClCompile Include="r_texture.cpp" />
+    <ClCompile Include="r_vignette.cpp" />
+    <ClCompile Include="r_world.cpp" />
+    <ClCompile Include="texture.cpp" />
+    <ClCompile Include="u_assert.cpp" />
+    <ClCompile Include="u_file.cpp" />
+    <ClCompile Include="u_hash.cpp" />
+    <ClCompile Include="u_misc.cpp" />
+    <ClCompile Include="u_new.cpp" />
+    <ClCompile Include="u_string.cpp" />
+    <ClCompile Include="u_zip.cpp" />
+    <ClCompile Include="u_zlib.cpp" />
+  </ItemGroup>
+  <ItemGroup>
+    <ResourceCompile Include="neothyne.rc" />
+  </ItemGroup>
+  <ItemGroup>
+    <None Include="packages.config" />
+  </ItemGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
+  <ImportGroup Label="ExtensionTargets">
+    <Import Project="packages\sdl2.redist.2.0.3\build\native\sdl2.redist.targets" Condition="Exists('packages\sdl2.redist.2.0.3\build\native\sdl2.redist.targets')" />
+    <Import Project="packages\sdl2.2.0.3\build\native\sdl2.targets" Condition="Exists('packages\sdl2.2.0.3\build\native\sdl2.targets')" />
+  </ImportGroup>
+  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
+    <PropertyGroup>
+      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
+    </PropertyGroup>
+    <Error Condition="!Exists('packages\sdl2.redist.2.0.3\build\native\sdl2.redist.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\sdl2.redist.2.0.3\build\native\sdl2.redist.targets'))" />
+    <Error Condition="!Exists('packages\sdl2.2.0.3\build\native\sdl2.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\sdl2.2.0.3\build\native\sdl2.targets'))" />
+  </Target>
+</Project>
\ No newline at end of file
diff --git a/r_stats.cpp b/r_stats.cpp
index d19a5a1..8ec5edc 100644
--- a/r_stats.cpp
+++ b/r_stats.cpp
@@ -37,7 +37,6 @@ void stat::drawHistogram(size_t x, size_t next) {
     const float renderWidth = (neoWidth()-kSpace*4) * r_stats_histogram_size;
     const float renderHeight = kSpace*2;
     const float sampleWidth = renderWidth / m_histogram.size();
-    m_texture.destroy();
     m_texture.resize(clamp(renderWidth) * clamp(renderHeight) * 4);
     for (size_t i = 0; i < m_histogram.size(); i++) {
         const auto &it = m_histogram[i];
diff --git a/u_file.cpp b/u_file.cpp
index be9855b..fbcdf94 100644
--- a/u_file.cpp
+++ b/u_file.cpp
@@ -115,7 +115,14 @@ bool mkdir(const u::string &dir) {
 }
 
 u::file fopen(const u::string& infile, const char *type) {
+#if defined(_MSC_VER)
+    FILE *stream = nullptr;
+    if (fopen_s(&stream, infile.c_str(), type) != 0)
+        return nullptr;
+    return stream;
+#else
     return ::fopen(fixPath(infile).c_str(), type);
+#endif
 }
 
 bool getline(u::file &fp, u::string &line) {
diff --git a/u_optional.h b/u_optional.h
index 93f35a2..743760d 100644
--- a/u_optional.h
+++ b/u_optional.h
@@ -18,229 +18,37 @@ struct nullopt_t {
 
 constexpr nullopt_t none {0};
 
-namespace detail {
-    template <typename T, bool = is_trivially_destructible<T>::value>
-    struct storage {
-    protected:
-        typedef T value_type;
-
-        ~storage() {
-            if (m_engaged)
-                m_value.~value_type();
-        }
-
-        constexpr storage()
-            : m_nil('\0')
-            , m_engaged(false)
-        {
-        }
-
-        storage(const storage &x)
-            : m_engaged(x.m_engaged)
-        {
-            if (m_engaged)
-                new (u::addressof(m_value)) value_type(x.m_value);
-        }
-
-        storage(storage &&x)
-            : m_engaged(x.m_engaged)
-        {
-            if (m_engaged)
-                new (u::addressof(m_value)) value_type(u::move(x.m_value));
-        }
-
-        constexpr storage(const value_type &v)
-            : m_value(v)
-            , m_engaged(true)
-        {
-        }
-
-        constexpr storage(value_type &&v)
-            : m_value(u::move(v))
-            , m_engaged(true)
-        {
-        }
-
-        template <typename ...A>
-        constexpr explicit storage(in_place_t, A &&...args)
-            : m_value(u::forward<A>(args)...)
-            , m_engaged(true)
-        {
-        }
-
-        union {
-            char m_nil;
-            value_type m_value;
-        };
-        bool m_engaged;
-    };
-
-    template <typename T>
-    struct storage<T, true> {
-    protected:
-        typedef T value_type;
-
-        constexpr storage()
-            : m_nil('\0')
-            , m_engaged(false)
-        {
-        }
-
-        storage(const storage &x)
-            : m_engaged(x.m_engaged)
-        {
-            if (m_engaged)
-                new (u::addressof(m_value)) value_type(x.m_value);
-        }
-
-        storage(storage &&x)
-            : m_engaged(x.m_engaged)
-        {
-            if (m_engaged)
-                new (u::addressof(m_value)) value_type(u::move(x.m_value));
-        }
-
-        constexpr storage(const value_type &v)
-            : m_value(v)
-            , m_engaged(true)
-        {
-        }
-
-        constexpr storage(value_type &&v)
-            : m_value(u::move(v))
-            , m_engaged(true)
-        {
-        }
-
-        template <typename ...A>
-        constexpr explicit storage(in_place_t, A &&...args)
-            : m_value(u::forward<A>(args)...)
-            , m_engaged(true)
-        {
-        }
-
-        union {
-            char m_nil;
-            value_type m_value;
-        };
-        bool m_engaged;
-    };
-
-    template <typename, typename T>
-    struct ignore {
-        typedef T type;
-    };
-
-    template <typename T>
-    struct has_operator_addressof_member {
-        template <typename U>
-        static auto test(int) ->
-            typename ignore<decltype(u::declval<U>().operator&()), true_type>::type;
-        template <typename>
-        false_type test(long);
-        static const bool value = decltype(test<T>(0))::value;
-    };
-
-    template <typename T>
-    struct has_operator_addressof_free {
-        template <typename U>
-        static auto test(int) ->
-            typename ignore<decltype(operator&(u::declval<U>())), true_type>::type;
-        template <typename>
-        false_type test(long);
-        static const bool value = decltype(test<T>(0))::value;
-    };
-
-    template <typename T>
-    struct has_operator_addressof
-        : integral_constant<bool, has_operator_addressof_member<T>::value ||
-                                  has_operator_addressof_free<T>::value> { };
-}
-
 template <typename T>
-struct optional : detail::storage<T> {
+struct optional {
     typedef T value_type;
+    optional(nullopt_t) : m_initialized(false) { }
 
-    constexpr optional() = default;
-    optional(const optional &) = default;
-    optional(optional &&) = default;
-    ~optional() = default;
+    optional(const T& value) : m_initialized(true) {
+        new (m_storage) T{ value };
+    }
 
-    constexpr optional(nullopt_t);
-    constexpr optional(const value_type &v);
-    constexpr optional(value_type &&v);
+    ~optional() {
+        if (m_initialized)
+            ((T *)m_storage)->T::~T();
+    }
 
-    optional &operator=(nullopt_t);
-    optional &operator=(const optional &);
-    optional &operator=(optional &&);
+    explicit operator bool() const {
+        return m_initialized;
+    }
 
-    constexpr value_type const* operator->() const;
-    value_type *operator->();
-    constexpr const value_type &operator*() const;
-    value_type &operator*();
+    const T& operator*() const {
+        return *((T *)m_storage);
+    }
 
-    constexpr explicit operator bool() const;
+    T& operator*() {
+        return *((T *)m_storage);
+    }
 
 private:
-    typedef detail::storage<T> m_base;
-
-    value_type const *access(true_type) const;
-    constexpr value_type const *access(false_type) const;
+    bool m_initialized;
+    alignas(alignof(T)) unsigned char m_storage[sizeof(T)];
 };
 
-template <typename T>
-inline typename optional<T>::value_type const *optional<T>::access(true_type) const {
-    return u::addressof(this->m_value);
-}
-
-template <typename T>
-constexpr typename optional<T>::value_type const *optional<T>::access(false_type) const {
-    return &this->m_value;
-}
-
-template <typename T>
-inline constexpr optional<T>::optional(nullopt_t) {
-    // Empty
-}
-
-template <typename T>
-inline constexpr optional<T>::optional(const value_type &v)
-    : m_base(v)
-{
-    // Empty
-}
-
-template <typename T>
-inline constexpr optional<T>::optional(value_type &&v)
-    : m_base(u::move(v))
-{
-    // Empty
-}
-
-template <typename T>
-inline constexpr typename optional<T>::value_type const* optional<T>::operator->() const {
-    return access(detail::has_operator_addressof<value_type> {});
-}
-
-template <typename T>
-inline typename optional<T>::value_type *optional<T>::operator->() {
-    return u::addressof(this->m_value);
-}
-
-template <typename T>
-inline constexpr const typename optional<T>::value_type &optional<T>::operator*() const {
-    return this->m_value;
-}
-
-template <typename T>
-inline typename optional<T>::value_type &optional<T>::operator*() {
-    return this->m_value;
-}
-
-template <typename T>
-inline constexpr optional<T>::operator bool() const {
-    return this->m_engaged;
-}
 
 }
 
diff --git a/u_traits.h b/u_traits.h
index e4d9241..c9ebba3 100644
--- a/u_traits.h
+++ b/u_traits.h
@@ -34,9 +34,9 @@
 #if defined(__GNUC__)
 #   define U_ASSUME_ALIGNED(PTR, ALIGNMENT) \
         (PTR = (decltype(PTR))__builtin_assume_aligned((PTR), (ALIGNMENT)))
-#elif defined(__MSC_VER)
+#elif defined(_MSC_VER)
 #   define U_ASSUME_ALIGNED(PTR, ALIGNMENT) \
-        __assume((size_t)(PTR) % (ALIGNMENT) === 0)
+        __assume((size_t)(PTR) % (ALIGNMENT) == 0)
 #else
 #   define U_ASSUME_ALIGNED(PTR, ALIGNMENT) \
         (void)0;
diff --git a/u_zip.cpp b/u_zip.cpp
index fa05b73..a972450 100644
--- a/u_zip.cpp
+++ b/u_zip.cpp
@@ -371,7 +371,12 @@ bool zip::write(const u::string &fileName, const unsigned char *const data, size
     local.csize = isCompressed ? compressed.size() : length;
     local.compression = isCompressed ? kCompressDeflate : kCompressNone;
     time_t currentTime = time(nullptr);
+#if defined(_MSC_VER)
+    struct tm tm, *t = &tm;
+    localtime_s(t, &currentTime);
+#else
     struct tm *t = localtime(&currentTime);
+#endif
     local.date = ((t->tm_year - 80) << 9) | ((t->tm_mon + 1) << 5) | t->tm_mday;
     local.time = (t->tm_hour << 11) | (t->tm_min << 5) | (t->tm_sec / 2);
     local.endianSwap();
@@ -469,7 +474,7 @@ bool zip::remove(const u::string &file) {
     u::file tempFile;
     // Generate a temporary file name
     for (size_t i = 0; i < 128; i++) {
-        tempFileName = u::fixPath(u::format("%s/tmp%zu", neoUserPath(), u::randu()));
+        tempFileName = u::fixPath(u::format("%s/tmp/%zu", neoUserPath(), u::randu()));
         if (u::exists(tempFileName, kFile))
             continue;
         if (!(tempFile = u::fopen(tempFileName, "wb")))
